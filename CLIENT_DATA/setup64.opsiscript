[Actions]
; common Values for (un)installation
include_insert "common.opsiinc"

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError
	; Stop process and set installation status to failed
else
	if FileExists("%ScriptPath%\delsub64.opsiscript")
		comment "Start uninstall sub section"
		Sub "%ScriptPath%\delsub64.opsiscript"
	endif

	Message "Installing %installingProdName% (%installingProdVersion%) 64 Bit..."
	comment "Starting the setup program"
	Winbatch_install
	Set $ExitCode$ = getLastExitCode
	if (isNSISExitcodeFatal($ExitCode$, "True", $ErrorString$) = "true")
       	isFatalError
    endif		

	comment "Test for installation success"

	; Ergebnis ist StringList (mehrere Einträge möglich);
	Set $ResultList$ = SearchRegistryUninstallKeys($ProductId$)
	; erste Zeile ist Status, da momentan (!) eine Funktion immer einen Rückgabewert haben muss. Abschneiden...
	Set $ResultList$ = getSubList(1 : ,$ResultList$)

	if ( count ($ResultList$) = "0" )
		logError "Fatal: After Installation " + $ProductName$ + " could not be found in registry"
		isFatalError
	else
		Set $RegBitScope$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegId$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))		
		
		if ($RegBitScope$ = "64")
			Set $InstalledVersion$ = GetRegistryStringValue64("[" + $RegId$ + "] DisplayVersion")
			Set $PathToExe$ = GetRegistryStringValue64("[" + $RegId$ + "] DisplayIcon")	
		else
			LogError "RegBitScope has to be 64"
			isFatalError
		endif
		if not (contains($InstalledVersion$, $ProductVersion$))
			LogError "Wrong version number found, something went wrong."
			isFatalError
		endif
		
		if $DesktopLink$ = "true"
			comment "Create common desktop link"
			Linkfolder_create_desktoplink
		endif
		
		comment "include custom post install file"
		set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
		if not ($CustomPostInstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostInstall$	
			endif
		endif
	endif
	
endif

[Winbatch_install]
"%ScriptPath%\$InstFile$" /S

[Linkfolder_create_desktoplink]
set_basefolder common_desktopdirectory
set_subfolder ""

set_link
	name: $ProductName$
	target: $PathToExe$
end_link
