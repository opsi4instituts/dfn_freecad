; Ergebnis ist StringList (mehrere Einträge möglich);
Set $ResultList$ = SearchRegistryUninstallKeys($ProductId$)
; erste Zeile ist Status, da momentan (!) eine Funktion immer einen Rückgabewert haben muss. Abschneiden...
Set $ResultList$ = getSubList(1 : ,$ResultList$)

Switch count ($ResultList$)
	Case "0"
		comment "No installations of " + $ProductName$ + " found in registry"
	EndCase
	Case "1"
		comment "Found one installation of " + $ProductName$ + " in registry, try to deinstall"

		; Ergebnis z.B. "32|HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\winscp3_is1"
		; Registry-Schlüssel inklusive Pfad, sowie Bereich (32 oder 64); deshalb zunächst aufsplitten
		comment "Getting 'UninstallString' from Registry"
		Set $RegBitScope$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegId$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))

		if ($RegBitScope$ = "32")
			Set $InstalledVersion$ = GetRegistryStringValue32("[" + $RegId$ + "] DisplayVersion")
			Set $InstallDir$ = GetRegistryStringValue32("[" + $RegId$ + "] InstallLocation")
			Set $UninstallProgram$ = GetRegistryStringValue32("[" + $RegId$ + "] UninstallString")
		else
			Set $InstalledVersion$ = GetRegistryStringValue64("[" + $RegId$ + "] DisplayVersion")
			Set $InstallDir$ = GetRegistryStringValue64("[" + $RegId$ + "] InstallLocation")
			Set $UninstallProgram$ = GetRegistryStringValue64("[" + $RegId$ + "] UninstallString")
		endif
		if not (FileExists($UninstallProgram$))
			LogError "Suspicious! Found entry of installer in Registry, but $UninstallProgramm$ does not exist!?"
			isFatalError
		endif
		; Versionsnummer ermitteln, falls 0.16.6712 dann 'uninstall.exe' austauschen, da die originale Version nicht silent
		if contains($InstalledVersion$, "0.16.6712")
			Files_repair-uninstaller
		endif
		 
		Winbatch_uninstall
		Set $ExitCode$ = getLastExitCode
		if (isNSISExitcodeFatal($ExitCode$, "True", $ErrorString$) = "true")
        	isFatalError
        endif		
				
		if $DesktopLink$ = "true"
			comment "Delete common desktop link"
			Linkfolder_delete_desktoplink
		endif
		
		comment "include custom post install file"
		set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
		if not ($CustomPostDeinstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
			endif
		endif
		
		; löscht vielleicht vorhandene Überbleibsel des Programmes
		if (Fileexists($InstallDir$))
			Files_uninstall
		endif
	EndCase
	DefaultCase
		comment "found more than one installation in the registry, this is not expected for this script!"
		isFatalError
	EndCase
EndSwitch

[Winbatch_uninstall]
$UninstallProgram$ /S

[Files_uninstall]
delete -sf $InstallDir$

[Files_repair-uninstaller]
copy "%ScriptPath%\uninstall.exe" $InstallDir$

[Linkfolder_delete_desktoplink]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element $ProductName$
